container_commands:
  create_resque_folder:
    command: "mkdir /var/resque"
    ignoreErrors: true
files:
  "/etc/monit.d/resque_worker":
    mode: "000644"
    owner: root
    group: root
    content: |
      check process resque with pidfile /var/resque/resque.pid
        start program = "/bin/sh -l -c '/var/resque/resque.sh start'"
        stop program = "/var/resque/resque.sh stop"
        if totalmem is greater than 300 MB for 10 cycles then restart  # eating up memory?
        group resque
  "/var/resque/resque.sh":
    mode: "000100"
    owner: root
    group: root
    content: |
      #!/bin/sh
      case $1 in
        start)
          export PATH=/opt/rubies/ruby-2.2.4/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/aws/bin
          cd /var/app/current && nohup rake environment resque:work QUEUE=* PIDFILE=/var/resque/resque.pid >> /var/resque/resque.log 2>&1 &;;
        stop)
          kill -9 $(cat /var/resque/resque.pid) && rm -f /var/resque/resque.pid;;
        *)
          echo "usage: resque.sh {start|stop}"
      esac
      exit 0
  "/etc/monit.d/resque_scheduler":
    mode: "000644"
    owner: root
    group: root
    content: |
      check process resque_scheduler with pidfile /var/resque/resque_scheduler.pid
        start program = "/bin/sh -l -c '/var/resque/resque_scheduler.sh start'"
        stop program = "/var/resque/resque_scheduler.sh stop"
        if totalmem is greater than 300 MB for 10 cycles then restart  # eating up memory?
        group resque
  "/var/resque/resque_scheduler.sh":
    mode: "000100"
    owner: root
    group: root
    content: |
      #!/bin/sh
      case $1 in
        start)
          export PATH=/opt/rubies/ruby-2.2.4/bin:/sbin:/bin:/usr/sbin:/usr/bin:/opt/aws/bin
          cd /var/app/current && nohup rake environment resque:scheduler PIDFILE=/var/resque/resque_scheduler.pid >> /var/resque/resque_scheduler.log 2>&1 &;;
        stop)
          kill -9 $(cat /var/resque/resque_scheduler.pid) && rm -f /var/resque/resque_scheduler.pid;;
        *)
          echo "usage: resque_scheduler.sh {start|stop}"
      esac
      exit 0
    